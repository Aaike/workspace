/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { EventFragment, FunctionFragment, Result } from "@ethersproject/abi";
import { BytesLike } from "@ethersproject/bytes";
import {
  CallOverrides,
  Contract,
  ContractTransaction,
  Overrides,
} from "@ethersproject/contracts";
import { Listener, Provider } from "@ethersproject/providers";
import {
  BigNumber,
  BigNumberish,
  ethers,
  EventFilter,
  PopulatedTransaction,
  Signer,
} from "ethers";

interface SetTokenCreatorInterface extends ethers.utils.Interface {
  functions: {
    "controller()": FunctionFragment;
    "create(address[],int256[],address[],address,string,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "controller",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "create",
    values: [string[], BigNumberish[], string[], string, string, string]
  ): string;

  decodeFunctionResult(functionFragment: "controller", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "create", data: BytesLike): Result;

  events: {
    "SetTokenCreated(address,address,string,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetTokenCreated"): EventFragment;
}

export class SetTokenCreator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: SetTokenCreatorInterface;

  functions: {
    controller(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "controller()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    create(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "create(address[],int256[],address[],address,string,string)"(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  controller(overrides?: CallOverrides): Promise<string>;

  "controller()"(overrides?: CallOverrides): Promise<string>;

  create(
    _components: string[],
    _units: BigNumberish[],
    _modules: string[],
    _manager: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "create(address[],int256[],address[],address,string,string)"(
    _components: string[],
    _units: BigNumberish[],
    _modules: string[],
    _manager: string,
    _name: string,
    _symbol: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    controller(overrides?: CallOverrides): Promise<string>;

    "controller()"(overrides?: CallOverrides): Promise<string>;

    create(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "create(address[],int256[],address[],address,string,string)"(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    SetTokenCreated(
      _setToken: string | null,
      _manager: null,
      _name: null,
      _symbol: null
    ): EventFilter;
  };

  estimateGas: {
    controller(overrides?: CallOverrides): Promise<BigNumber>;

    "controller()"(overrides?: CallOverrides): Promise<BigNumber>;

    create(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "create(address[],int256[],address[],address,string,string)"(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    controller(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "controller()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    create(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "create(address[],int256[],address[],address,string,string)"(
      _components: string[],
      _units: BigNumberish[],
      _modules: string[],
      _manager: string,
      _name: string,
      _symbol: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
